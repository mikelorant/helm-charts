{{- if .Values.collector.enabled -}}
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: "{{ template "jaeger.fullname" . }}-collector"
  labels:
    app: "{{ template "jaeger.name" . }}"
    jaeger-infra: collector-deployment
    chart: {{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}
    component: "collector"
    heritage: "{{ .Release.Service }}"
    release: "{{ .Release.Name }}"
{{- if .Values.collector.annotations }}
  annotations:
{{ toYaml .Values.collector.annotations | indent 6 }}
{{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: "{{ template "jaeger.name" . }}"
        component: "collector"
        release: "{{ .Release.Name }}"
        jaeger-infra: collector-pod
{{- if .Values.collector.podLabels }}
{{ toYaml .Values.collector.podLabels | indent 8 }}
{{- end }}
    spec:
      nodeSelector:
{{ toYaml .Values.collector.nodeSelector | indent 8 }}
      containers:
      - name: "{{ template "jaeger.fullname" . }}-collector"
        image: "{{ .Values.collector.image }}:{{ .Values.collector.tag }}"
        imagePullPolicy: {{ .Values.collector.pullPolicy }}
        env:
          - name: SPAN_STORAGE_TYPE
            value: {{ .Values.storage.type }}
          {{- if eq .Values.storage.type "cassandra" }}
          - name: CASSANDRA_SERVERS
            value: {{ template "cassandra.fullname" . }}
          - name: CASSANDRA_KEYSPACE
            value: jaeger_v1_{{ .Values.cassandra.config.dc_name }}
          {{- end }}
          {{- if eq .Values.storage.type "elasticsearch" }}
          - name: ES_SERVER_URLS
            value: {{ template "elasticsearch.client.url" . }}
          {{- end }}
          - name: COLLECTOR_ZIPKIN_HTTP_PORT
            value: "{{ .Values.collector.service.zipkinPort }}"
        ports:
        - containerPort: {{ .Values.collector.service.tchannelPort }}
          protocol: TCP
        - containerPort: {{ .Values.collector.service.httpPort }}
          protocol: TCP
        - containerPort: {{ .Values.collector.service.zipkinPort }}
          protocol: TCP
        resources:
{{ toYaml .Values.collector.resources | indent 10 }}
{{- range $key, $value := .Values.collector.cmdlineParams }}
        - "{{ $value }}"
{{- end }}
      dnsPolicy: {{ .Values.collector.dnsPolicy }}
      restartPolicy: Always
{{- end -}}
